<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.st.dao.AppointmentDao">
  <resultMap id="appointMap" type="com.st.entity.Appointment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staff_number" jdbcType="VARCHAR" property="staffNumber" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="base_column_list">
    id, staff_number, room_number, `number`, `status`, `desc`, start_time, end_time,
    create_time, update_time
  </sql>
  <delete id="deleteByNumber" parameterType="string">
    delete from appointment
    where `number` = #{number,jdbcType=VARCHAR}
  </delete>
<!--  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.st.entity.Appointment" useGeneratedKeys="true">-->
<!--    insert into appointment-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="staffNumber != null">-->
<!--        staff_number,-->
<!--      </if>-->
<!--      <if test="roomNumber != null">-->
<!--        room_number,-->
<!--      </if>-->
<!--      <if test="number != null">-->
<!--        `number`,-->
<!--      </if>-->
<!--      <if test="status != null">-->
<!--        `status`,-->
<!--      </if>-->
<!--      <if test="desc != null">-->
<!--        `desc`,-->
<!--      </if>-->
<!--      <if test="startTime != null">-->
<!--        start_time,-->
<!--      </if>-->
<!--      <if test="endTime != null">-->
<!--        end_time,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="staffNumber != null">-->
<!--        #{staffNumber,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="roomNumber != null">-->
<!--        #{roomNumber,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="number != null">-->
<!--        #{number,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="status != null">-->
<!--        #{status,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="desc != null">-->
<!--        #{desc,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="startTime != null">-->
<!--        #{startTime,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="endTime != null">-->
<!--        #{endTime,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
  <update id="update" parameterType="com.st.entity.Appointment">
    update appointment
    <set>
      <if test="staffNumber != null">
        staff_number = #{staffNumber,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `number` = #{number,jdbcType=VARCHAR}
  </update>


  <select id="toDoListPageQuery" resultMap="appointMap">
    select
    <include refid="base_column_list" />
    from appointment where status=1
    order by update_time desc limit #{page}, #{nums};
  </select>

  <select id="allowAndExpirePageQuery" resultMap="appointMap">
    select
    <include refid="base_column_list" />
    from appointment where status in (0, 2)
    order by update_time desc limit #{page}, #{nums};
  </select>

  <select id="multiSelect" resultMap="appointMap">
    select
    <include refid="base_column_list" />
    from appointment
    <where>
      <if test="staffNumber!=null and staffNumber!=''">
        and staff_number=#{staffNumber,jdbcType=VARCHAR}
      </if>
      <if test="roomNumber!=null and roomNumber!=''">
        and room_number=#{roomNumber,jdbcType=VARCHAR}
      </if>
    </where>
    order by update_time desc limit #{page}, #{nums};
  </select>

  <select id="getToDoNums" resultType="int">
    select count(id) from appointment where status=1
  </select>

  <select id="getAllowAndExpireNums" resultType="int">
    select count(id) from appointment where status in (0, 2)
  </select>

  <select id="getMultiSelectNums" resultType="int">
    select count(id)
    from appointment
    <where>
      <if test="staffNumber!=null and staffNumber!=''">
        and staff_number=#{staffNumber,jdbcType=VARCHAR}
      </if>
      <if test="roomNumber!=null and roomNumber!=''">
        and room_number=#{roomNumber,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectByNumber" resultMap="appointMap" parameterType="string">
    select <include refid="base_column_list" />
    from appointment where `number` = #{number,jdbcType=VARCHAR};
  </select>

  <select id="selectExpiredAppointment" resultMap="appointMap">
    select <include refid="base_column_list" />
    from appointment
    where status!=2 and end_time &lt; now();
  </select>

</mapper>